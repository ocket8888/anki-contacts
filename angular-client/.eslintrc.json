{
	"root": true,
	"overrides": [
		{
			"files": [
				"*.ts"
			],
			"rules": {
				"@typescript-eslint/explicit-function-return-type": "error"
			}
		},
		{
			"files": [
				"*.ts",
				"*.js"
			],
			"parserOptions": {
				"project": [
					"tsconfig.json",
					"angular-client/tsconfig.json"
				],
				"createDefaultProgram": true
			},
			"extends": [
				"plugin:@angular-eslint/template/process-inline-templates"
			],
			"plugins": [
				"@typescript-eslint",
				"@stylistic/ts",
				"@angular-eslint",
				"eslint-plugin-import",
				"eslint-plugin-jsdoc",
				"eslint-plugin-prefer-arrow"
			],
			"rules": {
				"@typescript-eslint/interface-name-prefix": "off",
				"@angular-eslint/component-class-suffix": "error",
				"@angular-eslint/contextual-lifecycle": "error",
				"@angular-eslint/directive-class-suffix": "error",
				"@angular-eslint/no-conflicting-lifecycle": "error",
				"@angular-eslint/no-host-metadata-property": "error",
				"@angular-eslint/no-input-rename": "error",
				"@angular-eslint/no-inputs-metadata-property": "error",
				"@angular-eslint/no-output-native": "error",
				"@angular-eslint/no-output-on-prefix": "error",
				"@angular-eslint/no-output-rename": "error",
				"@angular-eslint/no-outputs-metadata-property": "error",
				"@angular-eslint/use-lifecycle-interface": "error",
				"@angular-eslint/use-pipe-transform-interface": "error",
				"@typescript-eslint/adjacent-overload-signatures": "error",
				"@typescript-eslint/no-namespace": "error",
				"@typescript-eslint/no-parameter-properties": "off",
				"@typescript-eslint/prefer-namespace-keyword": "error",
				"@typescript-eslint/unified-signatures": "error",
				"complexity": "off",
				"constructor-super": "error",
				"no-mixed-spaces-and-tabs": "error",
				"eqeqeq": [
					"error",
					"smart"
				],
				"guard-for-in": "error",
				"id-blacklist": [
					"error",
					"any",
					"Number",
					"number",
					"String",
					"string",
					"Boolean",
					"boolean",
					"Undefined",
					"undefined"
				],
				"id-match": "error",
				"import/no-deprecated": "warn",
				"jsdoc/tag-lines":  ["error", "any", {"startLines":1}],
				"max-classes-per-file": "off",
				"no-caller": "error",
				"no-cond-assign": "error",
				"no-console": [
					"error",
					{
						"allow": [
							"info",
							"error",
							"trace",
							"dir",
							"timeLog",
							"clear",
							"count",
							"countReset",
							"group",
							"groupEnd",
							"table",
							"groupCollapsed",
							"Console",
							"profile",
							"profileEnd",
							"timeStamp",
							"context"
						]
					}
				],
				"no-debugger": "error",
				"no-eval": "error",
				"no-new-wrappers": "error",
				"no-throw-literal": "error",
				"no-undef-init": "error",
				"no-underscore-dangle": "error",
				"no-unsafe-finally": "error",
				"no-unused-labels": "error",
				"no-var": "error",
				"object-shorthand": "error",
				"one-var": [
					"error",
					"never"
				],
				"prefer-const": "error",
				"radix": "error",
				"use-isnan": "error",
				"valid-typeof": "off",
				"arrow-body-style": "error",
				"comma-dangle": "off",
				"curly": "error",
				"eol-last": "error",
				"jsdoc/check-alignment": "error",
				"jsdoc/check-indentation": "error",
				"jsdoc/check-param-names": "error",
				"jsdoc/check-property-names": "error",
				"jsdoc/check-values": "error",
				"jsdoc/empty-tags": "error",
				"jsdoc/informative-docs": "error",
				"jsdoc/match-description": [
					"error",
					{
						"matchDescription": ".+",
						"message": "Don't be lazy. Add a comment."
					}
				],
				"jsdoc/require-returns-check": "error",
				"max-len": [
					"error",
					{
						"code": 140
					}
				],
				"new-parens": "error",
				"no-trailing-spaces": "error",
				"quote-props": [
					"error",
					"as-needed"
				],
				"space-before-function-paren": [
					"error",
					{
						"anonymous": "never",
						"asyncArrow": "always",
						"named": "never"
					}
				],
				"quotes": "off",
				"@stylistic/ts/type-annotation-spacing": "error",
				"@angular-eslint/component-selector": [
					"error",
					{
						"type": "element",
						"prefix": "",
						"style": "kebab-case"
					}
				],
				"@angular-eslint/directive-selector": [
					"error",
					{
						"type": "attribute",
						"prefix": "",
						"style": "camelCase"
					}
				],
				"@typescript-eslint/array-type": "off",
				"@typescript-eslint/await-thenable": "error",
				"@typescript-eslint/no-unsafe-function-type": "error",
				"@typescript-eslint/no-wrapper-object-types": "error",
				"@typescript-eslint/no-empty-object-type": "error",
				"@typescript-eslint/consistent-type-assertions": "error",
				"@typescript-eslint/consistent-type-definitions": "error",
				"@typescript-eslint/dot-notation": "error",
				"@typescript-eslint/explicit-member-accessibility": [
					"error",
					{
						"accessibility": "explicit",
						"overrides": {
							"constructors": "off"
						}
					}
				],
				"@typescript-eslint/explicit-module-boundary-types": "error",
				"@stylistic/ts/indent": [
					"error",
					"tab"
				],
				"@stylistic/ts/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "semi",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": "off",
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "enumMember",
						"format": [
							"UPPER_CASE"
						]
					},
					{
						"selector": "property",
						"modifiers": [
							"static",
							"readonly"
						],
						"format": [
							"UPPER_CASE"
						]
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase"
						]
					},
					{
						"selector": "default",
						"format": [
							"camelCase"
						],
						"leadingUnderscore": "allow",
						"trailingUnderscore": "allow"
					},
					{
						"selector": "variable",
						"format": [
							"camelCase",
							"UPPER_CASE"
						],
						"leadingUnderscore": "allow",
						"trailingUnderscore": "allow"
					},
					{
						"selector": "typeLike",
						"format": [
							"PascalCase"
						]
					}
				],
				"@typescript-eslint/no-empty-function": "error",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-explicit-any": "error",
				"@typescript-eslint/no-extraneous-class": [
					"error",
					{
						"allowWithDecorator": true
					}
				],
				"import/no-duplicates": "error",
				"@typescript-eslint/no-dynamic-delete": "error",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-inferrable-types": [
					"warn",
					{
						"ignoreParameters": true
					}
				],
				"@typescript-eslint/no-invalid-this": [
					"error",
					{
						"capIsConstructor": false
					}
				],
				"@typescript-eslint/no-invalid-void-type": "error",
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-misused-promises": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"@typescript-eslint/no-redeclare": "error",
				"@typescript-eslint/no-require-imports": "error",
				"@typescript-eslint/no-shadow": "error",
				"@typescript-eslint/no-this-alias": "error",
				"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
				"@typescript-eslint/no-unnecessary-qualifier": "error",
				"@typescript-eslint/no-unnecessary-type-arguments": "error",
				"@typescript-eslint/no-unnecessary-type-assertion": "error",
				"@typescript-eslint/no-unused-expressions": "error",
				"@typescript-eslint/no-unused-vars": "error",
				"@typescript-eslint/no-use-before-define": "error",
				"@typescript-eslint/no-var-requires": "off",
				"@typescript-eslint/prefer-for-of": "error",
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/prefer-readonly": "error",
				"@typescript-eslint/promise-function-async": "error",
				"@stylistic/ts/quotes": [
					"error",
					"double",
					{
						"avoidEscape": true
					}
				],
				"@stylistic/ts/semi": [
					"error"
				],
				"@typescript-eslint/typedef": "off",
				"jsdoc/no-types": "error",
				"jsdoc/require-description": "error",
				"jsdoc/require-jsdoc": [
					"error",
					{
						"contexts": [
							"ClassProperty",
							"TSInterfaceDeclaration",
							"TSTypeAliasDeclaration",
							"TSEnumDeclaration",
							"TSEnumMember",
							"TSAbstractClassProperty"
						],
						"require": {
							"ClassDeclaration": true,
							"MethodDefinition": true
						},
						"checkConstructors": false,
						"checkGetters": true,
						"checkSetters": false,
						"enableFixer": false
					}
				],
				"@typescript-eslint/unbound-method": "error",
				"@typescript-eslint/restrict-plus-operands": "error",
				"@typescript-eslint/triple-slash-reference": "error",
				"arrow-parens": [
					"off",
					"always"
				],
				"brace-style": [
					"error",
					"1tbs"
				],
				"class-methods-use-this": "off",
				"import/export": "error",
				"import/first": "error",
				"import/newline-after-import": "error",
				"import/no-cycle": [
					"error",
					{
						"ignoreExternal": true
					}
				],
				"import/no-self-import": "error",
				"import/no-useless-path-segments": [
					"error",
					{
						"commonjs": true,
						"noUselessIndex": true
					}
				],
				"import/order": [
					"error",
					{
						"alphabetize": {
							"order": "asc"
						},
						"groups": [
							"builtin",
							"external",
							"internal",
							"parent",
							"sibling"
						],
						"pathGroups": [
							{
								"group": "builtin",
								"pattern": "zone.js/**/*",
								"position": "before"
							},
							{
								"group": "external",
								"pattern": "(@(angular|fortawesome)|chart.js|rxjs)*/**/*",
								"position": "before"
							},
							{
								"group": "internal",
								"pattern": "src/**/*"
							}
						],
						"pathGroupsExcludedImportTypes": [
							"zone.js/**/*",
							"@angular*/**/*",
							"@fortawesome*/**/*",
							"chart.js",
							"rxjs"
						],
						"newlines-between": "always",
						"warnOnUnassignedImports": true
					}
				],
				"linebreak-style": [
					"error",
					"unix"
				],
				"no-bitwise": "off",
				"no-duplicate-case": "error",
				"no-duplicate-imports": "off",
				"no-else-return": "error",
				"no-empty": "error",
				"no-extra-bind": "error",
				"no-fallthrough": "off",
				"no-invalid-this": "off",
				"no-multiple-empty-lines": [
					"error",
					{
						"max": 1,
						"maxBOF": 0,
						"maxEOF": 0
					}
				],
				"no-new-func": "error",
				"no-redeclare": "off",
				"no-return-await": "error",
				"no-sparse-arrays": "error",
				"no-template-curly-in-string": "error",
				"no-shadow": "off",
				"prefer-arrow/prefer-arrow-functions": "off",
				"prefer-object-spread": "error",
				"prefer-template": "error",
				"sort-keys": [
					"error",
					"asc",
					{
						"natural": true
					}
				]
			}
		},
		{
			"files": [
				"*.html"
			],
			"extends": [
				"plugin:@angular-eslint/template/recommended"
			],
			"rules": {
				"@angular-eslint/template/alt-text": "error",
				"@angular-eslint/template/elements-content": "error",
				"@angular-eslint/template/label-has-associated-control": "error",
				"@angular-eslint/template/table-scope": "error",
				"@angular-eslint/template/valid-aria": "error",
				// I want to see the results of this before committing to it,
				// which is difficult to do until I can actually use it.
				// "@angular-eslint/template/attributes-order": "warn",
				"@angular-eslint/template/banana-in-box": "error",
				"@angular-eslint/template/button-has-type": "error",
				"@angular-eslint/template/click-events-have-key-events": "warn",
				"@angular-eslint/template/conditional-complexity": [
					"error",
					{
						"maxComplexity": 2
					}
				],
				"@angular-eslint/template/cyclomatic-complexity": [
					"warn",
					{
						"maxComplexity": 8
					}
				],
				"@angular-eslint/template/eqeqeq": "error",
				"@angular-eslint/template/mouse-events-have-key-events": "error",
				"@angular-eslint/template/no-any": "error",
				"@angular-eslint/template/no-autofocus": "warn",
				"@angular-eslint/template/no-distracting-elements": "error",
				"@angular-eslint/template/no-duplicate-attributes": "error",
				"@angular-eslint/template/no-inline-styles": "warn",
				"@angular-eslint/template/no-interpolation-in-attributes": "error",
				"@angular-eslint/template/no-negated-async": "error",
				"@angular-eslint/template/no-positive-tabindex": "error",
				"@angular-eslint/template/use-track-by-function": "warn"
			}
		}
	]
}
